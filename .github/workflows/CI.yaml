name: CI

on:
  # GitHub has started calling new repo's first branch "main" https://github.com/github/renaming
  # Existing codes likely still have "master" as the primary branch
  # Both are tracked here to keep legacy and new codes working
  push:
    branches:
      - "master"
      - "main"
  pull_request:
    branches:
      - "master"
      - "main"
#  schedule:
#    # Nightly tests run on master by default:
#    #   Scheduled workflows run on the latest commit on the default or base branch.
#    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
#    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] # [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.8] #, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a


    # More info on options: https://github.com/conda-incubator/setup-miniconda
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test_env.yaml

        channels: conda-forge,defaults

        activate-environment: test
        auto-update-conda: false
        auto-activate-base: false
        show-channel-urls: true


    #- name: Build OpenMM
    #  shell: bash -l {0}
    #  run: |
    #    git clone https://github.com/openmm/openmm.git
    #    mkdir -p /home/runner/work/build/bin
    #    cd openmm
    #    mkdir build
    #    cd build
    #    cmake -DCMAKE_INSTALL_PREFIX=/home/runner/work/build/bin/openmm ..
    #    make 
    #    make install
    #    make PythonInstall
    #    cd ../..	

- name: Get NAMD
      shell: bash -l {0}
      env:
        NAMD_ACCESS_TOKEN: ${{ secrets.NAMD_ACCESS_TOKEN }}
      run: |
        git clone https://oauth2:${NAMD_ACCESS_TOKEN}@gitlab.com/tcbgUIUC/namd.git


    - name: Install BrownDye
      shell: bash -l {0}
      run: |
        wget https://browndye.ucsd.edu/downloads/browndye2.tar.gz
        tar xvfz browndye2.tar.gz
        cd browndye2
        make -j 4 all

    - name: Install package

      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list
        #conda install numpy scipy git swig matplotlib

        # Install seekr openmm plugin
        git clone https://github.com/seekrcentral/seekr2_openmm_plugin.git
        cd seekr2_openmm_plugin/seekr2plugin
        mkdir build
        cd build

        export OPENMM_INSTALL_DIR=${CONDA_PREFIX}
        export OPENMM_LIB_PATH=$OPENMM_INSTALL_DIR/lib
        export OPENMM_PLUGIN_DIR=$OPENMM_LIB_PATH/plugins
        
        export LD_LIBRARY_PATH=$OPENMM_LIB_PATH:$OPENMM_PLUGIN_DIR:$LD_LIBRARY_PATH
        cmake -DCMAKE_INSTALL_PREFIX=${CONDA_PREFIX} -DSEEKR2_BUILD_OPENCL_LIB=OFF -DOPENMM_DIR=${CONDA_PREFIX} ..
        make
        make install
        make PythonInstall
        make test



    - name: Run tests

      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        python -m simtk.testInstallation
        # pytest -v --cov=seekr2 --cov-report=xml --color=yes seekr2/tests/
        python setup.py test --addopts "--ignore=seekr2/tests/test_sim_namd.py --ignore=seekr2/tests/test_runner_namd.py --ignore=seekr2/tests/test_runner_browndye2.py" #--ignore=seekr2/tests/test_runner_openmm.py"

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
